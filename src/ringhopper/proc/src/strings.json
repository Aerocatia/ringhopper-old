{
    "general.error_tag_not_found": "Tag {tag} not found.",

    "arguments.error_directory_missing": "Directory \"{dir}\" does not exist.",
    "arguments.error_directory_not_directory": "Path \"{dir}\" does not point to a valid directory.",
    "arguments.error_engine_invalid": "{engine} does not correspond to a valid engine.",
    "arguments.error_engine_needed": "An engine target was expected.",
    "arguments.error_use_help": "Use --help to get the usage.",

    "arguments.data.description": "Specify a data directory. Default: \"data\"",
    "arguments.engine.description": "Specify an engine target. This option is required. Use the \"list-engines\" verb to list all targets.",
    "arguments.help.description": "View all allowed arguments.",
    "arguments.maps.description": "Specify a maps directory. Default: \"maps\"",
    "arguments.overwrite.description": "Overwrite if the output file already exists.",
    "arguments.threads.description": "Specify the number of processor threads to use. By default, all available threads are used.",
    "arguments.tags.description_multi": "Specify a tags directory. Use multiple times to specify multiple tags directories. Default: \"tags\"",
    "arguments.tags.description_single": "Specify a tags directory. Default: \"tags\"",

    "arguments.specifier.tag_batch_with_group": "tag*.group",
    "arguments.specifier.tag_batch_without_group": "tag*",
    "arguments.specifier.tag_without_group": "tag",
    "arguments.specifier.tag_with_group": "tag.group",
    "arguments.specifier.cache_file": "cache-file",

    "command_usage.error": "Usage: {path} <verb> [arguments...]",
    "command_usage.error_argument_only_usable_once": "Argument --{arg} can only be used once",
    "command_usage.error_argument_takes_a_parameter": "Argument --{arg} takes a parameter",
    "command_usage.error_argument_unexpected": "Unexpected argument {arg}",
    "command_usage.error_argument_unknown": "Unknown argument {prefix}{arg}",
    "command_usage.error_arguments_missing": "Arguments are missing. Needs:",
    "command_usage.error_available_verbs": "Available verbs:",
    "command_usage.error_bad_thread_count": "Invalid thread count \"{string}\": {error}",
    "command_usage.error_get_help": "Use {path} <verb> --help to view help information for a verb.",
    "command_usage.error_no_verbs_available": "<no verbs are available for this tool>",
    "command_usage.error_no_verbs_matched": "No verbs matched \"{lookup}\"!",
    "command_usage.error_verb_unsupported": "Verb \"{verb}\" is not supported by this tool.",
    "command_usage.warning_only_one_tags_dir_supported": "This verb takes only one tags directory - \"{dir}\" will be used.",

    "engine.h1.error_improperly_extracted_model_markers": "The model tag contains runtime markers and needs repaired for this operation.",
    "engine.h1.error_improperly_extracted_model_vertices_compressed": "The model tag is missing compressed vertices and needs repaired for this operation.",
    "engine.h1.error_improperly_extracted_model_vertices_uncompressed": "The model tag is missing uncompressed vertices and needs repaired for this operation.",

    "engine.h1.jms.error_could_not_parse_jms": "Could not parse JMS at {line}:{column}: {error}",
    "engine.h1.jms.error_expected_token": "Expected token. Reached EOF instead.",
    "engine.h1.jms.error_expected_token_end": "Expected end of token. Reached EOF instead.",
    "engine.h1.jms.error_integer_outside_range": "Expected a 32-bit integer. Got {token} instead.",
    "engine.h1.jms.error_unexpected_token": "Expected EOF. Found more tokens instead.",
    "engine.h1.jms.error_verify_fail_infinite_loop": "Infinite loop of nodes detected!",
    "engine.h1.jms.error_verify_fail_out_of_bounds_material": "Triangle #{triangle} has an out-of-bounds material ({material} >= {material_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_node_for_marker": "Marker #{marker} has an out-of-bounds node ({node} >= {node_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_node_for_node": "Node #{node_this} has an out-of-bounds node ({node} >= {node_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_node_for_vertex": "Vertex #{vertex} has an out-of-bounds node ({node} >= {node_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_region_for_marker": "Marker #{marker} has an out-of-bounds region ({region} >= {region_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_region_for_triangle": "Triangle #{triangle} has an out-of-bounds region ({region} >= {region_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_vertex": "Triangle #{triangle} has an out-of-bounds vertex ({vertex} >= {vertex_count})",
    "engine.h1.jms.error_version_mismatch": "Version mismatch (expected {version_expected} got {version_read})",

    "engine.h1.types.gbxmodel.error_invalid_local_nodes": "The model's local nodes are invalid.",
    "engine.h1.types.gbxmodel.error_cannot_regenerate_compressed_vertices_local_nodes": "Cannot generate compressed vertices due to having too many nodes. This is valid, but the model won't work on Xbox ({node_count} > {limit})",

    "engine.h1.types.bitmap.error_3d_textures_need_color_plate": "3D textures cannot be generated without a valid color plate.",
    "engine.h1.types.bitmap.error_3d_textures_non_power_of_two_bitmap_count": "Expected power-of-two number of bitmaps in sequence #{sequence}. Found {bitmaps} instead.",
    "engine.h1.types.bitmap.error_cannot_convert_sprite_length": "{input} does not correspond to a valid sprite budget length (expected one of: {valid_lengths})",
    "engine.h1.types.bitmap.error_bad_color_plate": "Input bitmap is neither a regular color plate nor non-power-of-two ({width} x {height})",
    "engine.h1.types.bitmap.error_bad_cubemap_input": "Input cubemap is neither a regular color plate nor a valid unrolled cubemap",
    "engine.h1.types.bitmap.error_broken_sequence_divider": "Sequence divider on row y={y} is broken at x={x} (expected {expected_color}, got {actual_color})",
    "engine.h1.types.bitmap.error_cubemap_wrong_map_count": "Expected 0 or 6 bitmaps in sequence #{sequence}. Found {bitmaps} instead.",
    "engine.h1.types.bitmap.error_improper_first_pixel": "Invalid starting pixel on row y={y} (expected background or sequence divider, got {actual_color})",
    "engine.h1.types.bitmap.error_missing_sequence_divider": "Expected a sequence divider on the second row (y=1) (expected {expected_color}, but first pixel was {actual_color})",
    "engine.h1.types.bitmap.error_multi_texture_needs_same_sized_bitmaps": "Sequence #{sequence} has different-sized bitmaps in it.",
    "engine.h1.types.bitmap.error_null_texture": "Tried to process a texture with no actual pixels in it @ x={x}, y={y}",
    "engine.h1.types.bitmap.error_non_power_of_two_texture": "Tried to process a non-power-of-two texture {width}x{height} @ x={x}, y={y}",
    "engine.h1.types.bitmap.error_sprite_max_budget_exceeded": "Maximum budget exceeded ({total} / {max} pixels)",
    "engine.h1.types.bitmap.error_sprite_sheet_cannot_fit": "Could not fit all sprites in sequence {sequence} in {length} x {length} sprite sheets",
    "engine.h1.types.bitmap.error_sprite_sheets_need_color_plate": "Sprite sheets cannot be generated without a valid color plate.",
    "engine.h1.types.bitmap.error_texture_too_large": "Tried to process a {width}x{height} texture which is too large @ x={x}, y={y}",
    "engine.h1.types.bitmap.warning_bitmap_deleted_zero_alpha": "Removed a fully transparent bitmap due to alpha blend @ x={x}, y={y}",
    "engine.h1.types.bitmap.warning_sequence_split_across_textures": "{split_across} sequence(s) had to be split across multiple sheets to fit the budget. This is valid but may cause issues.",

    "engine.h1.types.tag.header.error": "Error parsing the tag header: {reason}",
    "engine.h1.types.tag.header.error_reason_blam_invalid": "Blam literal fourCC does not match (0x{blam:08X} expected, got 0x{other:08X} instead).",
    "engine.h1.types.tag.header.error_reason_unparsable_group": "Unable to parse {group} tag files.",
    "engine.h1.types.tag.header.error_reason_wrong_group": "Expected a {group_expected} tag file, got a {group_actual} tag file instead.",
    "engine.h1.types.tag.header.error_reason_version_unsupported": "Version for {group} is unsupported ({version} expected, got {other} instead).",

    "engine.h1.types.scenario.contains_non_ascii": "Source \"{file}\" contains non-ASCII bytes. This will become an error in a future version!",
    "engine.h1.types.scenario.error_compile_failed_to_compile_scripts": "Failed to compile script: {file}:{line}:{column}: {message}",
    "engine.h1.types.scenario.error_compile_could_not_find_object": "Could not resolve \"{tag_reference}\" into an object tag.",
    "engine.h1.types.scenario.error_compile_could_not_find_squad_or_platoon": "Cannot find a squad or platoon named \"{sub_index}\" in encounter \"{encounter}\"",
    "engine.h1.types.scenario.error_compile_found_squad_or_platoon_index_overflow": "Found \"{sub_index}\" in encounter \"{encounter}\"'s {array_type}, but its index exceeds the maximum index for scripts ({index} > {max_index})",
    "engine.h1.types.scenario.error_compile_found_in_array_index_overflow": "Found \"{string_data}\" in \"{arr_name}\", but its index exceeds the maximum index for scripts ({index} > {max_index})",
    "engine.h1.types.scenario.error_compile_could_not_find_in_array": "Cannot find \"{string_data}\" in \"{arr_name}\"",
    "engine.h1.types.scenario.error_compile_could_not_find_in_array_placeholder": "Cannot find \"{string_data}\" in \"{arr_name}\" (note: \"none\" cannot be used as a placeholder here)",
    "engine.h1.types.scenario.error_compile_max_node_count_exceeded": "Maximum node count exceeded for the target engine ({node_count} > {max_nodes})",
    "engine.h1.types.scenario.error_compile_max_node_count_exceeded_console": "Not enough nodes available for the console for the target engine ({node_count} + 32 > {max_nodes})",

    "engine.h1.types.serialize.error_architecture_limit_exceeded": "Size integer type overflowed. (Architecture size limit exceeded!)",
    "engine.h1.types.serialize.error_array_limit_exceeded": "Array exceeds the maximum number of entries and cannot be written to a tag ({size} > {limit}).",
    "engine.h1.types.serialize.error_byte_array_limit_exceeded": "Data exceeds the maximum number of bytes and cannot be written to a tag (0x{size:08X} > 0x{limit:08X}).",
    "engine.h1.types.serialize.error_corrupt_tag": "Tried to read out-of-bounds data. (Tag may be corrupt!)",
    "engine.h1.types.serialize.error_data_cursor_inside_struct": "Data cursor is inside the struct instead of outside. This is a bug!",
    "engine.h1.types.serialize.error_data_not_zeroed_out": "Data not zeroed out at offset 0x{:08X}. This is a bug!",
    "engine.h1.types.serialize.error_enum_invalid_str": "\"{input}\" does not correspond to a {enum_name}. Expected one of: {options:?}",
    "engine.h1.types.serialize.error_enum_out_of_bounds": "{input_value} is out-of-bounds for {enum_name} ({input_value} >= {enum_count})",
    "engine.h1.types.serialize.error_fourcc_invalid": "0x{fourcc:08X} does not correspond to a valid FourCC.",
    "engine.h1.types.serialize.error_max_path_limit": "Path exceeds the maximum number of characters and cannot be written to a tag ({size} > {limit}).",
    "engine.h1.types.serialize.error_path_not_utf8": "Path is not valid UTF-8.",
    "engine.h1.types.serialize.error_tag_leftover_data": "Tag contains leftover data and may be corrupt (0x{read:08X} / 0x{total:08X} bytes read).",

    "engine.h1.verbs.bitmap.arguments.alpha-bias.description": "Set the alpha fade factor on mipmaps between -1.0 and 1.0. Default (new tag): 0",
    "engine.h1.verbs.bitmap.arguments.blur-filter-size.description": "Blur the bitmap by the given radius. Default (new tag): 0",
    "engine.h1.verbs.bitmap.arguments.bump-height.description": "Specify the bump height for height maps. Default (new tag): 0.026",
    "engine.h1.verbs.bitmap.arguments.sobel-bumpmaps.description": "Use Sobel filter for bumpmap generation. This setting does not persist.",
    "engine.h1.verbs.bitmap.arguments.detail-fade-factor.description": "Set the detail fade factor between 0.0 and 1.0. Default (new tag): 0.0",
    "engine.h1.verbs.bitmap.arguments.dithering.description": "Apply dithering to 16-bit or p8 bitmaps. Default (new tag): off",
    "engine.h1.verbs.bitmap.arguments.fade-to-average.description": "Fade to the average color for detail maps instead of #7F7F7F. This setting does not persist.",
    "engine.h1.verbs.bitmap.arguments.format.description": "Set the output pixel format. Can be: dxt1, dxt3, dxt5, 16-bit, 32-bit, monochrome. Default (new tag): best lossless",
    "engine.h1.verbs.bitmap.arguments.gamma-corrected-mipmaps.description": "Enable gamma correction in mipmap generation. This setting does not persist.",
    "engine.h1.verbs.bitmap.arguments.map-count.description": "Limit the maximum number of maps (base map + mipmaps), or 0 for no limit. Default (new tag): 0",
    "engine.h1.verbs.bitmap.arguments.palettization.description": "Enable palettization for height maps. Default (new tag): off",
    "engine.h1.verbs.bitmap.arguments.reg-point-from-texture.description": "Use the texture dimensions (including dummy space) to calculate registration point. If this is off, only the width of the texture is used while the height is ignored, instead using the height of the sequence. Default (new tag): off",
    "engine.h1.verbs.bitmap.arguments.regenerate.description": "Use the bitmap tag's source data as the input. This setting does not persist.",
    "engine.h1.verbs.bitmap.arguments.sharpen-amount.description": "Sharpen the bitmap by the given amount. Default (new tag): 0",
    "engine.h1.verbs.bitmap.arguments.sprite-budget-count.description": "Limit the maximum number of sprite sheets; 0 disables budgeting. Default (new tag): 0",
    "engine.h1.verbs.bitmap.arguments.sprite-budget-size.description": "Limit the maximum resolution of sprite sheets if budgeting is enabled. Must be power-of-two and between 32 and 1024. Default (new tag): 32",
    "engine.h1.verbs.bitmap.arguments.sprite-spacing.description": "Set the sprite spacing in pixels; 0 is automatic. Default (new tag): 0",
    "engine.h1.verbs.bitmap.arguments.sprite-usage.description": "Set the type of sprite sheet. Can be: blend-add-subtract-max, multiply-min, or double-multiply. Default (new tag): blend-add-subtract-max",
    "engine.h1.verbs.bitmap.arguments.square-sheets.description": "Force square sprite sheets (works around particles being incorrectly stretched). This setting does not persist.",
    "engine.h1.verbs.bitmap.arguments.type.description": "Specify the type. Can be: 2d-textures, 3d-textures, cube-maps, sprites, interface-bitmaps",
    "engine.h1.verbs.bitmap.arguments.usage.description": "Set the postprocessing method. Can be: alpha-blend, default, height-map, detail-map, light-map, vector-map. Default (new tag): default",
    "engine.h1.verbs.bitmap.error_cannot_find_bitmap_data": "Cannot find a corresponding .tif, .tiff, or .png in the data directory for {tag}",
    "engine.h1.verbs.bitmap.error_cannot_regenerate_missing_color_plate": "{tag} does has no color plate data and thus cannot be regenerated.",
    "engine.h1.verbs.bitmap.error_cannot_regenerate_missing_tag": "{tag} does not exist and thus cannot be regenerated.",
    "engine.h1.verbs.bitmap.error_could_not_generate_bitmaps": "Could not generate bitmaps for {tag}: {error}",
    "engine.h1.verbs.bitmap.error_exceeded_bitmap_count": "Maximum bitmap count in a sequence exceeded ({count} > {max})",
    "engine.h1.verbs.bitmap.error_exceeded_bitmap_index": "Maximum bitmap index in a sequence exceeded ({index} > {max})",
    "engine.h1.verbs.bitmap.error_exceeded_dimensions": "Maximum bitmap dimensions exceeded ({width}x{height}x{depth} > {max}x{max}x{max})",
    "engine.h1.verbs.bitmap.error_need_8_bit_color": "Only 8-bit channels are supported!",
    "engine.h1.verbs.bitmap.error_need_rgba_grayscale": "Only RGB(A) and grayscale are supported!",
    "engine.h1.verbs.bitmap.generated_bitmaps": "Successfully generated bitmaps for {count} tag(s)",
    "engine.h1.verbs.bitmap.generated_bitmaps_with_warnings": "Generated bitmaps for {count} tag(s) with {warning} warnings(s)",
    "engine.h1.verbs.bitmap.generated_bitmaps_with_warnings_and_errors": "Generated bitmaps for {count} tag(s) with {warning} warning(s) and {error} error(s)",
    "engine.h1.verbs.bitmap.output_sprite_sheets": "Sprite sheets: {bitmap_count}",
    "engine.h1.verbs.bitmap.output_sequences_bitmaps": "Sequence #{sequence}: {bitmap_count} bitmap(s)",
    "engine.h1.verbs.bitmap.output_sequences_sprites": "Sequence #{sequence}: {sprite_count} sprite(s)",
    "engine.h1.verbs.bitmap.warning_dxt1_alpha_loss": "DXT1 was requested, but one or more bitmaps' base maps do not have 1-bit alpha and had to be crunched into 1-bit alpha.",
    "engine.h1.verbs.bitmap.warning_dxt1_color_loss": "DXT1 was requested, but one or more bitmaps' base maps have fully transparent pixels with color which were set to black.",
    "engine.h1.verbs.bitmap.warning_dxt1_color_loss_entire_bitmap": "... and one or more bitmaps are fully transparent, thus they are now fully black.",
    "engine.h1.verbs.bitmap.warning_monochrome_non_monochrome": "Monochrome was requested, but one or more bitmaps are not monochrome.",

    "engine.h1.verbs.convert.error_could_not_convert_tag": "Could not convert {tag}: {error}",
    "engine.h1.verbs.convert.error_no_tags_converted": "No tags were converted due to {error} error(s).",
    "engine.h1.verbs.convert.error_no_tags_found": "No convertible tags were found.",
    "engine.h1.verbs.convert.converted_all_tags": "Converted {count} tag(s).",
    "engine.h1.verbs.convert.converted_some_tags_with_errors": "Converted {count} tag(s) with {error} error(s).",
    "engine.h1.verbs.convert.skipped_tag": "Skipped {tag} (tag already exists)",
    "engine.h1.verbs.convert.converted_tag": "Converted {tag}",
    "engine.h1.verbs.convert.unable_to_convert_tag": "Can't convert {tag} to {output_group}",

    "engine.h1.verbs.list-engines.available_engines": "Available engines targets:",

    "engine.h1.verbs.recover.error_bitmap_color_plate_data_invalid": "Compressed color plate data is invalid.",
    "engine.h1.verbs.recover.error_could_not_recover_tag": "Could not recover {tag}: {error}",
    "engine.h1.verbs.recover.error_duplicate_scripts": "Multiple instances of \"{name}\" script source files.",
    "engine.h1.verbs.recover.error_hud_messages_not_valid_utf16": "String data is not valid UTF-16.",
    "engine.h1.verbs.recover.error_hud_messages_out_of_bounds_message": "Message #{message_index} ({message_name}) has an out-of-bounds range.",
    "engine.h1.verbs.recover.error_hud_messages_out_of_bounds_element": "Element #{message_index} has an out-of-bounds range.",
    "engine.h1.verbs.recover.error_no_tags_recovered": "No tags were recovered due to {error} error(s).",
    "engine.h1.verbs.recover.error_no_tags_found": "No recoverable tags were found.",
    "engine.h1.verbs.recover.error_parent_dir_incorrect": "Parent directory does not match the file name of the tag.",
    "engine.h1.verbs.recover.error_shader_index_out_of_bounds": "Shader index is out of bounds for part #{part} (${shader} >= ${shader_count})",
    "engine.h1.verbs.recover.no_source_data": "Tag does not contain any source data to recover.",
    "engine.h1.verbs.recover.recovered_all_tags": "Recovered {count} tag(s).",
    "engine.h1.verbs.recover.recovered_some_tags_with_errors": "Recovered {count} tag(s) with {error} error(s).",
    "engine.h1.verbs.recover.skipped_tag_exists": "Skipped {tag} (source data already exists on filesystem)",
    "engine.h1.verbs.recover.skipped_tag_no_source_data": "Skipped {tag} (no source data found in tag)",
    "engine.h1.verbs.recover.recovered_tag": "Recovered {tag}",
    "engine.h1.verbs.recover.unable_to_recover_tag": "Can't recover {input_group} tags.",

    "engine.h1.verbs.script.arguments.clear.description": "Clear all script data from the tag.",
    "engine.h1.verbs.script.arguments.exclude_global_scripts.description": "Do not automatically include global_scripts.hsc from the root of the data folder.",
    "engine.h1.verbs.script.arguments.explicit.description": "Explicitly compile the given source in the script directory. This argument can be used multiple times.",
    "engine.h1.verbs.script.arguments.regenerate.description": "Use the scenario tag's script source data as data.",
    "engine.h1.verbs.script.arguments.reload_scripts.description": "Only recompile sources referenced by the tag.",
    "engine.h1.verbs.script.cleared_scripts": "Cleared scripts and globals for {tag}",
    "engine.h1.verbs.script.compiled_scripts": "Compiled {script_count} script(s) and {global_count} global(s) for {tag}",
    "engine.h1.verbs.script.compiled_scripts_with_warnings": "{warning_count} warning(s) when compiling scripts for {tag_path}:",
    "engine.h1.verbs.script.compiled_some_tags_with_errors": "Compiled scripts for {count} tag(s) with {warning} warning(s) and {error} error(s).",
    "engine.h1.verbs.script.compiled_all_tags": "Compiled scripts for {count} tag(s) with {warning} warning(s).",
    "engine.h1.verbs.script.error_could_not_compile_scripts": "Failed to compile scripts for {tag}: {error}",
    "engine.h1.verbs.script.error_could_not_read_scripts": "Failed to read scripts: {error}",
    "engine.h1.verbs.script.error_could_not_find_hud_globals": "Could not find a HUD globals tag: {error}",
    "engine.h1.verbs.script.error_global_scripts_not_in_root": "The scenario scripts directory cannot contain \"global_scripts.hsc\"",
    "engine.h1.verbs.script.error_no_hud_globals_referenced": "No HUD globals tag referenced by the globals tag.",
    "engine.h1.verbs.script.error_no_interface_bitmaps": "No interface bitmaps in the globals tag.",
    "engine.h1.verbs.script.error_no_tags_compiled": "No scripts could be compiled due to {error} error(s)",

    "engine.h1.verbs.sound.arguments.channel-count.description": "Force the channel count and remix audio not equal to this. Can be: mono or stereo. Default (new tag): channel count of the input audio",
    "engine.h1.verbs.sound.arguments.class.description": "Set the class. This option is required if the tag does not exist. Can be: ambient-computers, ambient-machinery, ambient-nature, device-computers, device-door, device-force-field, device-machinery, device-nature, first-person-damage, game-event, music, object-impacts, particle-impacts, projectile-impact, projectile-detonation, scripted-dialog-force-unspatialized, scripted-dialog-other, scripted-dialog-player, scripted-effect, slow-particle-impacts, unit-dialog, unit-footsteps, vehicle-collision, vehicle-engine, weapon-charge, weapon-empty, weapon-fire, weapon-idle, weapon-overheat, weapon-ready, weapon-reload.",
    "engine.h1.verbs.sound.arguments.compression-level.description": "Set the compression level for Ogg Vorbis streams. Can be: -0.2 to 1.0 or be a bitrate in kbps if suffixed with k (e.g. 100k). Default: 0.8",
    "engine.h1.verbs.sound.arguments.fit-to-adpcm-block-size.description": "Fit to the Xbox ADPCM block size if encoding for Xbox ADPCM. Default (new tag): off",
    "engine.h1.verbs.sound.arguments.format.description": "Set the output format of the samples. Can be: pcm, ogg-vorbis, xbox-adpcm. Default (new tag): pcm",
    "engine.h1.verbs.sound.arguments.sample-rate.description": "Force the sample rate and resample audio not equal to this. Can be: 22050 or 44100. Default (new tag): 44100 Hz if input audio is greater than 22050 Hz, or 22050 Hz",
    "engine.h1.verbs.sound.arguments.split.description": "Set if the permutations should be split to reduce memory usage. This cannot be used for dialogue. Default (new tag): off",
    "engine.h1.verbs.sound.error_ambiguous_permutation": "Ambiguous permutation \"{permutation}\" in \"{pitch_range}\" found (first file is \"{permutation_1}\", second file is \"{permutation_2}\")",
    "engine.h1.verbs.sound.error_ambiguous_pitch_range": "Ambiguous pitch range \"{pitch_range}\" found (first directory is \"{pitch_range_1}\", second directory is \"{pitch_range_2}\")",
    "engine.h1.verbs.sound.error_bad_channel_count": "Expected 1 or 2 channels. Found {channels} in \"{file}\" which is unsupported.",
    "engine.h1.verbs.sound.error_bad_directory_empty": "Sound tag data \"{dir}\" directory is empty.",
    "engine.h1.verbs.sound.error_bad_directory_mixed_files_dirs": "Sound tag data \"{dir}\" directory contains mixed files and directories.",
    "engine.h1.verbs.sound.error_bad_quality": "Invalid compression quality \"{value}\": could not parse",
    "engine.h1.verbs.sound.error_bad_quality_range": "Invalid compression quality \"{value}\": not between -0.2 and 1.0",
    "engine.h1.verbs.sound.error_cannot_decode": "Can't decode \"{file}\": {e}",
    "engine.h1.verbs.sound.error_cannot_decode_no_default_track": "No default track found in \"{file}\"",
    "engine.h1.verbs.sound.error_cannot_decode_no_samples": "Could not decode any samples from \"{file}\"",
    "engine.h1.verbs.sound.error_cannot_get_sample_rate": "Can't get sample rate of \"{file}\"",
    "engine.h1.verbs.sound.error_cannot_find_dir": "Failed to find the sound tag's data directory. \"{dir}\" does not exist or is not a directory",
    "engine.h1.verbs.sound.error_cannot_split_mouth_data": "Cannot split permutations with generated mouth data.",
    "engine.h1.verbs.sound.error_could_not_process_sounds": "Could not process sounds for {tag}: {error}",
    "engine.h1.verbs.sound.error_ima_adpcm_not_supported": "IMA ADPCM is not supported",
    "engine.h1.verbs.sound.error_no_sound_class_given": "A sound class is required because sound tag \"{tag}\" does not yet exist.",
    "engine.h1.verbs.sound.error_permutation_limit_exceeded": "Pitch range \"{pitch_range}\" exceeds the maximum number of permutations allowed ({count} > {limit})",
    "engine.h1.verbs.sound.error_permutation_size_exceeded": "Permutation \"{permutation}\"'s uncompressed size exceeds the maximum size ({size} > {limit})",
    "engine.h1.verbs.sound.error_subpermutation_limit_exceeded": "Pitch range \"{pitch_range}\" exceeds the maximum number of permutations allowed ({count} > {limit})",
    "engine.h1.verbs.sound.output_end": "Output: {sample_rate} Hz, {channel_count}, {format} @ {kbps:.01} kbps ({size}){split}",
    "engine.h1.verbs.sound.output_pitch_range_header": "Pitch range #{pitch_range_index} ({pitch_range_name}): {permutation_count} permutation(s)",
    "engine.h1.verbs.sound.output_pitch_range_permutation": "    Permutation #{permutation_index} ({permutation_name}): {min:02}:{sec:02}.{msec:03} (input: {original_sample_rate} Hz, {original_channel_count}, {original_bits_per_sample}, {original_codec})",
    "engine.h1.verbs.sound.processed_sounds": "Processed {count} sound(s).",
    "engine.h1.verbs.sound.processed_sounds_with_errors": "Processed {count} sound(s) with {error} error(s).",


    "engine.h1.verbs.strip.error_could_not_strip_tag": "Could not strip {tag}: {error}",
    "engine.h1.verbs.strip.error_no_tags_stripped": "No tags were stripped due to {error} error(s).",
    "engine.h1.verbs.strip.stripped_all_tags": "Stripped {count} tag(s).",
    "engine.h1.verbs.strip.stripped_some_tags_with_errors": "Stripped {count} tag(s) with {error} error(s).",
    "engine.h1.verbs.strip.skipped_tag": "Skipped {tag} (tag is already clean)",
    "engine.h1.verbs.strip.stripped_tag": "Stripped {tag}",

    "engine.h1.verbs.unicode-strings.error_creating_directories": "Error creating directories {dirs}: {error}",
    "engine.h1.verbs.unicode-strings.error_missing_end_string": "A string is missing an ###END-STRING### line.",
    "engine.h1.verbs.unicode-strings.error_parsing_file": "Error parsing file {file}: {error}",
    "engine.h1.verbs.unicode-strings.saved_file": "Saved {file}",

    "engine.types.error_null_index_unwrap": "Tried to use a null index where one isn't allowed.",
    "engine.types.error_null_index": "Tried to access a null index of an array where a null index isn't allowed ({size} of {item_type})",
    "engine.types.error_out_of_bounds_index": "Tried to access an out-of-bounds index of an array of type ({index} >= {size} of {item_type})",
    "engine.types.error_path_empty_when_non_empty": "Path \"{new_path}\" resolves to an empty path.",
    "engine.types.error_path_group_invalid": "Extension \"{potential_group}\" does not correspond to a tag group.",
    "engine.types.error_path_has_restricted_character": "Path \"{new_path}\" contains restricted character '{character}'.",
    "engine.types.error_path_invalid_directory": "Path \"{new_path}\" contains an invalid directory \"{directory}\".",
    "engine.types.error_path_missing_extension": "Path \"{path}\" does not have a file extension.",
    "engine.types.error_path_not_ascii": "Path \"{path}\" is non-ASCII.",
    "engine.types.error_string_exceeds_limit": "String data exceeds {limit} bytes. {len} > {limit}",
    "engine.types.error_string_not_null_terminated": "String data is not null terminated.",
    "engine.types.error_string_not_valid_utf8": "String data is not valid UTF-8.",
    "engine.types.error_string_unable_to_encode_into_1252": "String data cannot be encoded into Windows-1252: {error}",

    "file.error_opening_file_read": "Error opening file {file} for reading: {error}",
    "file.error_opening_file_write": "Error opening file {file} for writing: {error}",
    "file.error_reading_file": "Error reading file {file}: {error}",
    "file.error_writing_file": "Error writing file {file}: {error}",
    "file.error_reading_virtual_tags_directory": "Error reading virtual tags directory: {error}",
    "file.error_non_utf8_path": "Unable to parse path \"{path}\" as UTF-8",
    "file.error_no_tags_found": "No tags were found.",
    "file.error_iterating_directory": "Error iterating directory \"{path}\": {error}",
    "file.error_recursion_limit_reached": "Directory recursion limit reached! Possible infinite loop detected.",

    "terminal.warning_prefix": "Warning: ",
    "terminal.error_prefix": "Error: ",

    "verb.archive.description": "Recursively archive tags.",
    "verb.bitmap.description": "Generate bitmap tags.",
    "verb.bludgeon.description": "Repair tags.",
    "verb.bsp.description": "Generate structure_structure_bsp tags.",
    "verb.build.description": "Generate cache files.",
    "verb.camera-track.description": "Generate camera_track tags.",
    "verb.collision.description": "Generate model_collision_geometry tags.",
    "verb.compare.description": "Compare sets of tags.",
    "verb.convert.description": "Convert tags to other groups.",
    "verb.dependency.description": "Get dependencies for tags.",
    "verb.edit.description": "Edit tags.",
    "verb.extract.description": "Extract tags from cache files.",
    "verb.font.description": "Generate font tags.",
    "verb.gbxmodel.description": "Generate gbxmodel tags.",
    "verb.hud-messages.description": "Generate hud_message_text tags.",
    "verb.info.description": "Get information for cache files.",
    "verb.lightmap.description": "Generate lightmaps.",
    "verb.list-engines.description": "View available engine targets.",
    "verb.model.description": "Generate model tags.",
    "verb.physics.description": "Generate physics tags.",
    "verb.plate.description": "Generate color plates.",
    "verb.recover.description": "Recover source data from tags.",
    "verb.refactor.description": "Move tags while preserving references.",
    "verb.repair.description": "Repair cache files.",
    "verb.resource.description": "Generate resource maps.",
    "verb.scan.description": "Scan cache files for unknown data.",
    "verb.script.description": "Compile scripts for scenario tags.",
    "verb.sound.description": "Generate sound tags.",
    "verb.strip.description": "Remove unused data from tags.",
    "verb.strings.description": "Generate string_list tags.",
    "verb.tag-collection.description": "Generate tag_collection tags.",
    "verb.ui-collection.description": "Generate ui_widget_collection tags.",
    "verb.unicode-strings.description": "Generate unicode_string_list tags."
}
