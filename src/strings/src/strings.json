{
    "format_ringhopper_version": "{project} {version}.r{commit_count}.{commit_hash})",

    "arguments.error_directory_missing": "Directory \"{dir}\" does not exist.",
    "arguments.error_directory_not_directory": "Path \"{dir}\" does not point to a valid directory.",
    "arguments.error_use_help": "Use --help to get the usage.",

    "arguments.data.description": "Specify a data directory. Default: \"data\"",
    "arguments.help.description": "View all allowed arguments.",
    "arguments.maps.description": "Specify a maps directory. Default: \"maps\"",
    "arguments.overwrite.description": "Overwrite if the output file already exists.",
    "arguments.tags.description_multi": "Specify a tags directory. Use multiple times to specify multiple tags directories. Default: \"tags\"",
    "arguments.tags.description_single": "Specify a tags directory. Default: \"tags\"",

    "arguments.specifier.tag_batch_with_group": "tag*.group",
    "arguments.specifier.tag_without_group": "tag",
    "arguments.specifier.tag_with_group": "tag.group",
    "arguments.specifier.cache_file": "cache-file",

    "command_usage.error": "Usage: {path} <verb> [arguments...]",
    "command_usage.error_argument_only_usable_once": "Argument --{arg} can only be used once",
    "command_usage.error_argument_takes_a_parameter": "Argument --{arg} takes a parameter",
    "command_usage.error_argument_unexpected": "Unexpected argument {arg}",
    "command_usage.error_argument_unknown": "Unknown argument {prefix}{arg}",
    "command_usage.error_arguments_missing": "Arguments are missing. Needs:",
    "command_usage.error_available_verbs": "Available verbs:",
    "command_usage.error_get_help": "Use {path} <verb> --help to view help information for a verb.",
    "command_usage.error_no_verbs_available": "<no verbs are available for this tool>",
    "command_usage.error_no_verbs_matched": "No verbs matched \"{lookup}\"!",
    "command_usage.error_verb_unsupported": "Verb \"{verb}\" is not supported by this tool.",
    "command_usage.warning_only_one_tags_dir_supported": "This verb takes only one tags directory - \"{dir}\" will be used.",

    "engine.h1.error_improperly_extracted_model_markers": "The model tag contains runtime markers and needs repaired for this operation.",
    "engine.h1.error_improperly_extracted_model_vertices_compressed": "The model tag is missing compressed vertices and needs repaired for this operation.",
    "engine.h1.error_improperly_extracted_model_vertices_uncompressed": "The model tag is missing uncompressed vertices and needs repaired for this operation.",

    "engine.h1.jms.error_could_not_parse_jms": "Could not parse JMS at {line}:{column}: {error}",
    "engine.h1.jms.error_expected_token": "Expected token. Reached EOF instead.",
    "engine.h1.jms.error_expected_token_end": "Expected end of token. Reached EOF instead.",
    "engine.h1.jms.error_integer_outside_range": "Expected a 32-bit integer. Got {token} instead.",
    "engine.h1.jms.error_unexpected_token": "Expected EOF. Found more tokens instead.",
    "engine.h1.jms.error_verify_fail_infinite_loop": "Infinite loop of nodes detected!",
    "engine.h1.jms.error_verify_fail_out_of_bounds_material": "Triangle #{triangle} has an out-of-bounds material ({material} >= {material_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_node_for_marker": "Marker #{marker} has an out-of-bounds node ({node} >= {node_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_node_for_node": "Node #{node_this} has an out-of-bounds node ({node} >= {node_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_node_for_vertex": "Vertex #{vertex} has an out-of-bounds node ({node} >= {node_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_region_for_marker": "Marker #{marker} has an out-of-bounds region ({region} >= {region_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_region_for_triangle": "Triangle #{triangle} has an out-of-bounds region ({region} >= {region_count})",
    "engine.h1.jms.error_verify_fail_out_of_bounds_vertex": "Triangle #{triangle} has an out-of-bounds vertex ({vertex} >= {vertex_count})",
    "engine.h1.jms.error_version_mismatch": "Version mismatch (expected {version_expected} got {version_read})",

    "engine.h1.types.gbxmodel.error_invalid_local_nodes": "The model's local nodes are invalid.",
    "engine.h1.types.gbxmodel.error_cannot_regenerate_compressed_vertices_local_nodes": "Cannot generate compressed vertices due to having too many nodes. This is valid, but the model won't work on Xbox ({node_count} > {limit})",

    "engine.h1.types.tag.header.error": "Error parsing the tag header: {reason}",
    "engine.h1.types.tag.header.error_reason_blam_invalid": "Blam literal fourCC does not match (0x{blam:08X} expected, got 0x{other:08X} instead).",
    "engine.h1.types.tag.header.error_reason_unparsable_group": "Unable to parse {group} tag files.",
    "engine.h1.types.tag.header.error_reason_wrong_group": "Expected a {group_expected} tag file, got a {group_actual} tag file instead.",
    "engine.h1.types.tag.header.error_reason_version_unsupported": "Version for {group} is unsupported ({version} expected, got {other} instead).",

    "engine.h1.types.serialize.error_architecture_limit_exceeded": "Data is out of bounds. (Architecture size limit exceeded!)",
    "engine.h1.types.serialize.error_array_limit_exceeded": "Array exceeds the maximum number of entries and cannot be written to a tag ({size} > {limit}).",
    "engine.h1.types.serialize.error_byte_array_limit_exceeded": "Data exceeds the maximum number of bytes and cannot be written to a tag (0x{size:08X} > 0x{limit:08X}).",
    "engine.h1.types.serialize.error_data_cursor_inside_struct": "Data cursor is inside the struct instead of outside. This is a bug!",
    "engine.h1.types.serialize.error_data_not_zeroed_out": "Data not zeroed out at offset 0x{:08X}. This is a bug!",
    "engine.h1.types.serialize.error_fourcc_invalid": "0x{fourcc:08X} does not correspond to a valid FourCC.",
    "engine.h1.types.serialize.error_max_path_limit": "Path exceeds the maximum number of characters and cannot be written to a tag ({size} > {limit}).",
    "engine.h1.types.serialize.error_path_not_utf8": "Path is not valid UTF-8.",
    "engine.h1.types.serialize.error_tag_leftover_data": "Tag contains leftover data and may be corrupt (0x{read:08X} / 0x{total:08X} bytes read).",

    "engine.h1.verbs.convert.error_could_not_convert_tag": "Could not convert {tag}: {error}",
    "engine.h1.verbs.convert.error_no_tags_converted": "No tags were converted due to {error} error(s).",
    "engine.h1.verbs.convert.error_no_tags_found": "No convertible tags were found.",
    "engine.h1.verbs.convert.converted_all_tags": "Converted {count} tag(s).",
    "engine.h1.verbs.convert.converted_some_tags_with_errors": "Converted {count} tag(s) with {error} error(s).",
    "engine.h1.verbs.convert.skipped_tag": "Skipped {tag} (tag already exists)",
    "engine.h1.verbs.convert.converted_tag": "Converted {tag}",
    "engine.h1.verbs.convert.unable_to_convert_tag": "Can't convert {tag} to {output_group}",

    "engine.h1.verbs.recover.error_bitmap_color_plate_data_invalid": "Compressed color plate data is invalid.",
    "engine.h1.verbs.recover.error_could_not_recover_tag": "Could not recover {tag}: {error}",
    "engine.h1.verbs.recover.error_hud_messages_not_valid_utf16": "String data is not valid UTF-16.",
    "engine.h1.verbs.recover.error_hud_messages_out_of_bounds_message": "Message #{message_index} ({message_name}) has an out-of-bounds range.",
    "engine.h1.verbs.recover.error_hud_messages_out_of_bounds_element": "Element #{message_index} has an out-of-bounds range.",
    "engine.h1.verbs.recover.error_no_tags_recovered": "No tags were recovered due to {error} error(s).",
    "engine.h1.verbs.recover.error_no_tags_found": "No recoverable tags were found.",
    "engine.h1.verbs.recover.error_parent_dir_incorrect": "Parent directory does not match the file name of the tag.",
    "engine.h1.verbs.recover.no_source_data": "Tag does not contain any source data to recover.",
    "engine.h1.verbs.recover.recovered_all_tags": "Recovered {count} tag(s).",
    "engine.h1.verbs.recover.recovered_some_tags_with_errors": "Recovered {count} tag(s) with {error} error(s).",
    "engine.h1.verbs.recover.skipped_tag_exists": "Skipped {tag} (source data already exists on filesystem)",
    "engine.h1.verbs.recover.skipped_tag_no_source_data": "Skipped {tag} (no source data found in tag)",
    "engine.h1.verbs.recover.recovered_tag": "Recovered {tag}",
    "engine.h1.verbs.recover.unable_to_recover_tag": "Can't recover {input_group} tags.",

    "engine.h1.verbs.strip.error_could_not_strip_tag": "Could not strip {tag}: {error}",
    "engine.h1.verbs.strip.error_no_tags_stripped": "No tags were stripped due to {error} error(s).",
    "engine.h1.verbs.strip.stripped_all_tags": "Stripped {count} tag(s).",
    "engine.h1.verbs.strip.stripped_some_tags_with_errors": "Stripped {count} tag(s) with {error} error(s).",
    "engine.h1.verbs.strip.skipped_tag": "Skipped {tag} (tag is already clean)",
    "engine.h1.verbs.strip.stripped_tag": "Stripped {tag}",

    "engine.h1.verbs.unicode-strings.error_creating_directories": "Error creating directories {dirs}: {error}",
    "engine.h1.verbs.unicode-strings.error_missing_end_string": "A string is missing an ###END-STRING### line.",
    "engine.h1.verbs.unicode-strings.error_parsing_file": "Error parsing file {file}: {error}",
    "engine.h1.verbs.unicode-strings.saved_file": "Saved {file}",

    "engine.types.error_null_index_unwrap": "Tried to use a null index where one isn't allowed.",
    "engine.types.error_null_index": "Tried to access a null index of an array where a null index isn't allowed ({size} of {item_type})",
    "engine.types.error_out_of_bounds_index": "Tried to access an out-of-bounds index of an array of type ({index} >= {size} of {item_type})",
    "engine.types.error_path_empty_when_non_empty": "Path \"{new_path}\" resolves to an empty path.",
    "engine.types.error_path_group_invalid": "Extension \"{potential_group}\" does not correspond to a tag group.",
    "engine.types.error_path_has_restricted_character": "Path \"{new_path}\" contains restricted character '{character}'.",
    "engine.types.error_path_invalid_directory": "Path \"{new_path}\" contains an invalid directory \"{directory}\".",
    "engine.types.error_path_missing_extension": "Path \"{path}\" does not have a file extension.",
    "engine.types.error_path_not_ascii": "Path \"{new_path}\" is non-ASCII.",
    "engine.types.error_string_exceeds_limit": "String data exceeds {limit} bytes. {len} > {limit}",
    "engine.types.error_string_not_null_terminated": "String data is not null terminated.",
    "engine.types.error_string_not_valid_utf8": "String data is not valid UTF-8.",
    "engine.types.error_string_unable_to_encode_into_1252": "String data cannot be encoded into Windows-1252: {error}",

    "file.error_opening_file_read": "Error opening file {file} for reading: {error}",
    "file.error_opening_file_write": "Error opening file {file} for writing: {error}",
    "file.error_reading_file": "Error reading file {file}: {error}",
    "file.error_writing_file": "Error writing file {file}: {error}",
    "file.error_reading_virtual_tags_directory": "Error reading virtual tags directory: {error}",
    "file.error_non_utf8_path": "Unable to parse path \"{path}\" as UTF-8",
    "file.error_no_tags_found": "No tags were found.",
    "file.error_iterating_directory": "Error iterating directory \"{path}\": {error}",
    "file.error_recursion_limit_reached": "Directory recursion limit reached! Possible infinite loop detected.",

    "terminal.warning_prefix": "Warning: ",
    "terminal.error_prefix": "Error: ",

    "verb.archive.description": "Recursively archive tags.",
    "verb.bitmap.description": "Generate bitmap tags.",
    "verb.bludgeon.description": "Repair tags.",
    "verb.bsp.description": "Generate structure_structure_bsp tags.",
    "verb.build.description": "Generate cache files.",
    "verb.camera-track.description": "Generate camera_track tags.",
    "verb.collision.description": "Generate model_collision_geometry tags.",
    "verb.compare.description": "Compare sets of tags.",
    "verb.convert.description": "Convert tags to other groups.",
    "verb.dependency.description": "Get dependencies for tags.",
    "verb.edit.description": "Edit tags.",
    "verb.extract.description": "Extract tags from cache files.",
    "verb.font.description": "Generate font tags.",
    "verb.gbxmodel.description": "Generate gbxmodel tags.",
    "verb.hud-messages.description": "Generate hud_message_text tags.",
    "verb.info.description": "Get information for cache files.",
    "verb.lightmap.description": "Generate lightmaps.",
    "verb.model.description": "Generate model tags.",
    "verb.physics.description": "Generate physics tags.",
    "verb.plate.description": "Generate color plates.",
    "verb.recover.description": "Recover source data from tags.",
    "verb.refactor.description": "Move tags while preserving references.",
    "verb.repair.description": "Repair cache files.",
    "verb.resource.description": "Generate resource maps.",
    "verb.scan.description": "Scan cache files for unknown data.",
    "verb.script.description": "Compile scripts for scenario tags.",
    "verb.sound.description": "Generate sound tags.",
    "verb.strip.description": "Remove unused data from tags.",
    "verb.strings.description": "Generate string_list tags.",
    "verb.tag-collection.description": "Generate tag_collection tags.",
    "verb.ui-collection.description": "Generate ui_widget_collection tags.",
    "verb.unicode-strings.description": "Generate unicode_string_list tags.",
    "verb.version.description": "Get the version."
}
