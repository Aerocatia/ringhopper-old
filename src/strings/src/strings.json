{
    "arguments.error_directory_missing": "Directory \"{dir}\" does not exist.",
    "arguments.error_directory_not_directory": "Path \"{dir}\" does not point to a valid directory.",
    "arguments.error_use_help": "Use --help to get the usage.",

    "arguments.data.description": "Specify a data directory. Default: \"data\"",
    "arguments.help.description": "View all allowed arguments.",
    "arguments.maps.description": "Specify a maps directory. Default: \"maps\"",
    "arguments.tags.description": "Specify a tags directory. Use multiple times to specify multiple tags directories. Default: \"tags\"",

    "arguments.specifier.tag_without_group": "tag",
    "arguments.specifier.tag_with_group": "tag.group",
    "arguments.specifier.cache_file": "cache-file",

    "command_usage.error": "Usage: {path} <verb> [arguments...]",
    "command_usage.error_argument_only_usable_once": "Argument --{arg} can only be used once",
    "command_usage.error_argument_takes_a_parameter": "Argument --{arg} takes a parameter",
    "command_usage.error_argument_unexpected": "Unexpected argument {arg}",
    "command_usage.error_argument_unknown": "Unknown argument {prefix}{arg}",
    "command_usage.error_arguments_missing": "Arguments are missing. Needs:",
    "command_usage.error_available_verbs": "Available verbs:",
    "command_usage.error_get_help": "Use {path} <verb> --help to view help information for a verb.",
    "command_usage.error_no_verbs_available": "<no verbs are available for this tool>",
    "command_usage.error_no_verbs_matched": "No verbs matched \"{lookup}\"!",
    "command_usage.error_verb_unsupported": "Verb \"{verb}\" is not supported by this tool.",
    "command_usage.warning_only_one_tags_dir_supported": "This verb takes only one tags directory - \"{dir}\" will be used.",

    "engine.h1.verbs.unicode-strings.error_creating_directories": "Error creating directories {dirs}: {error}",
    "engine.h1.verbs.unicode-strings.error_opening_file_read": "Error opening file {file} for reading: {error}",
    "engine.h1.verbs.unicode-strings.error_opening_file_write": "Error opening file {file} for writing: {error}",
    "engine.h1.verbs.unicode-strings.error_missing_end_string": "Input is missing an ###END-STRINGS### line.",
    "engine.h1.verbs.unicode-strings.error_parsing_file": "Error parsing file {file}: {error}",
    "engine.h1.verbs.unicode-strings.error_reading_file": "Error reading file {file}: {error}",
    "engine.h1.verbs.unicode-strings.error_writing_file": "Error writing file {file}: {error}",
    "engine.h1.verbs.unicode-strings.saved_file": "Saved {file}",

    "engine.h1.types.tag.header.error": "Error parsing the tag header: {reason}",
    "engine.h1.types.tag.header.error_reason_blam_invalid": "Blam literal fourCC does not match (0x{blam:08X} expected, got 0x{other:08X} instead).",
    "engine.h1.types.tag.header.error_reason_version_unsupported": "Version for {group} is unsupported ({version} expected, got {other} instead).",

    "engine.h1.types.serialize.error_architecture_limit_exceeded": "Data is out of bounds. (Architecture size limit exceeded!)",
    "engine.h1.types.serialize.error_array_limit_exceeded": "Array exceeds the maximum number of entries and cannot be written to a tag ({size} > {limit}).",
    "engine.h1.types.serialize.error_byte_array_limit_exceeded": "Data exceeds the maximum number of bytes and cannot be written to a tag (0x{size:08X} > 0x{limit:08X}).",
    "engine.h1.types.serialize.error_data_cursor_inside_struct": "Data cursor is inside the struct instead of outside. This is a bug!",
    "engine.h1.types.serialize.error_data_not_zeroed_out": "Data not zeroed out at offset 0x{:08X}. This is a bug!",
    "engine.h1.types.serialize.error_fourcc_invalid": "0x{fourcc:08X} does not correspond to a valid FourCC.",
    "engine.h1.types.serialize.error_max_path_limit": "Path exceeds the maximum number of characters and cannot be written to a tag ({size} > {limit}).",
    "engine.h1.types.serialize.error_path_not_utf8": "Path is not valid UTF-8.",
    "engine.h1.types.serialize.error_tag_leftover_data": "Tag contains leftover data and may be corrupt (0x{read:08X} / 0x{total:08X} bytes read).",

    "engine.types.error_path_group_invalid": "Extension \"{potential_group}\" does not correspond to a tag group.",
    "engine.types.error_path_has_restricted_character": "Path \"{new_path}\" contains restricted character '{character}'.",
    "engine.types.error_path_missing_extension": "Path \"{path}\" does not have a file extension.",
    "engine.types.error_path_not_ascii": "Path \"{new_path}\" is non-ASCII.",
    "engine.types.error_string_exceeds_limit": "String data exceeds {limit} bytes. {len} > {limit}",
    "engine.types.error_string_not_null_terminated": "String data is not null terminated.",
    "engine.types.error_string_not_valid_utf8": "String data is not valid UTF-8.",

    "terminal.warning_prefix": "Warning: ",
    "terminal.error_prefix": "Error: ",

    "verb.archive.description": "Recursively archive tags.",
    "verb.bitmap.description": "Generate bitmap tags.",
    "verb.bludgeon.description": "Repair tags.",
    "verb.bsp.description": "Generate structure_structure_bsp tags.",
    "verb.build.description": "Generate cache files.",
    "verb.camera-track.description": "Generate camera_track tags.",
    "verb.collection.description": "Generate tag_collection tags.",
    "verb.collision.description": "Generate model_collision_geometry tags.",
    "verb.compare.description": "Compare sets of tags.",
    "verb.convert.description": "Convert tags to other groups.",
    "verb.dependency.description": "Get dependencies for tags.",
    "verb.edit.description": "Edit tags.",
    "verb.extract.description": "Extract tags from cache files.",
    "verb.font.description": "Generate font tags.",
    "verb.gbxmodel.description": "Generate gbxmodel tags.",
    "verb.hud-messages.description": "Generate hud_message_text tags.",
    "verb.info.description": "Get information for cache files.",
    "verb.lightmap.description": "Generate lightmaps.",
    "verb.model.description": "Generate model tags.",
    "verb.physics.description": "Generate physics tags.",
    "verb.plate.description": "Generate color plates.",
    "verb.recover.description": "Recover source data from tags.",
    "verb.refactor.description": "Move tags while preserving references.",
    "verb.repair.description": "Repair cache files.",
    "verb.resource.description": "Generate resource maps.",
    "verb.scan.description": "Scan cache files for unknown data.",
    "verb.script.description": "Compile scripts for scenario tags.",
    "verb.sound.description": "Generate sound tags.",
    "verb.strip.description": "Remove unused data from tags.",
    "verb.strings.description": "Generate string_list tags.",
    "verb.unicode-strings.description": "Generate unicode_string_list tags.",
    "verb.version.description": "Get invader's version."
}
